/* 
 * Content Delivery Client API
 *
 * <p>Cloud Content Delivery is a managed cloud service that hosts and delivers content to end users worldwide.</p> <p>You are currently viewing the documentation for the <b>Client API</b>, which is intended to be used at runtime by your game client. The <a href=\"https://content-api.cloud.unity3d.com/doc/\">Content Delivery Management API</a> is intended to be used by developers at build time for managing content.</p> <h2>Client API Domain</h2> <p>The Client API base domain uses a different domain from the Management API and is in the format:</p> <pre>https://9a474388-ba4d-469a-bf3c-8b557f89012d.client-api.unity3dusercontent.com/</pre> <h2>Client SDK</h2> <p>The Content Delivery Client API is based on Swagger. You can use the <a href=\"https://swagger.io/tools/swagger-codegen/\">Swagger Code Generator</a> and a client schema document to integrate client libraries with your projects.</p> <p>Once you create a bucket with the Management API, the Client API is accessible via a per-project API domain. To download the schema document necessary to generate a client library, put in your Project ID and click Download.</p> <form action=\"https://content-api.cloud.unity3d.com/doc_client/doc.json\" method=\"GET\"> <div><label for=\"projectID\">Project ID</label><input type=\"text\" name=\"projectID\" id=\"projectID\" required /></div> <div><button type=\"submit\">Download</button></div> </form> <h2>Authentication</h2> <p>Everything in the Client API requires NO AUTHENTICATION. The data served from this API is effectively public.</p>
 *
 * OpenAPI spec version: 0.9.112
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = CloudContentDeliveryClient.Client.SwaggerDateConverter;

namespace CloudContentDeliveryClient.Model
{
    /// <summary>
    /// Release
    /// </summary>
    [DataContract]
    public partial class Release :  IEquatable<Release>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Release" /> class.
        /// </summary>
        /// <param name="contentHash">contentHash.</param>
        /// <param name="contentSize">contentSize.</param>
        /// <param name="created">created.</param>
        /// <param name="metadata">metadata.</param>
        /// <param name="releaseid">releaseid.</param>
        /// <param name="releasenum">releasenum.</param>
        public Release(string contentHash = default(string), int? contentSize = default(int?), DateTime? created = default(DateTime?), Object metadata = default(Object), Guid? releaseid = default(Guid?), int? releasenum = default(int?))
        {
            this.ContentHash = contentHash;
            this.ContentSize = contentSize;
            this.Created = created;
            this.Metadata = metadata;
            this.Releaseid = releaseid;
            this.Releasenum = releasenum;
        }
        
        /// <summary>
        /// Gets or Sets ContentHash
        /// </summary>
        [DataMember(Name="content_hash", EmitDefaultValue=false)]
        public string ContentHash { get; set; }

        /// <summary>
        /// Gets or Sets ContentSize
        /// </summary>
        [DataMember(Name="content_size", EmitDefaultValue=false)]
        public int? ContentSize { get; set; }

        /// <summary>
        /// Gets or Sets Created
        /// </summary>
        [DataMember(Name="created", EmitDefaultValue=false)]
        public DateTime? Created { get; set; }

        /// <summary>
        /// Gets or Sets Metadata
        /// </summary>
        [DataMember(Name="metadata", EmitDefaultValue=false)]
        public Object Metadata { get; set; }

        /// <summary>
        /// Gets or Sets Releaseid
        /// </summary>
        [DataMember(Name="releaseid", EmitDefaultValue=false)]
        public Guid? Releaseid { get; set; }

        /// <summary>
        /// Gets or Sets Releasenum
        /// </summary>
        [DataMember(Name="releasenum", EmitDefaultValue=false)]
        public int? Releasenum { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Release {\n");
            sb.Append("  ContentHash: ").Append(ContentHash).Append("\n");
            sb.Append("  ContentSize: ").Append(ContentSize).Append("\n");
            sb.Append("  Created: ").Append(Created).Append("\n");
            sb.Append("  Metadata: ").Append(Metadata).Append("\n");
            sb.Append("  Releaseid: ").Append(Releaseid).Append("\n");
            sb.Append("  Releasenum: ").Append(Releasenum).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as Release);
        }

        /// <summary>
        /// Returns true if Release instances are equal
        /// </summary>
        /// <param name="input">Instance of Release to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Release input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ContentHash == input.ContentHash ||
                    (this.ContentHash != null &&
                    this.ContentHash.Equals(input.ContentHash))
                ) && 
                (
                    this.ContentSize == input.ContentSize ||
                    (this.ContentSize != null &&
                    this.ContentSize.Equals(input.ContentSize))
                ) && 
                (
                    this.Created == input.Created ||
                    (this.Created != null &&
                    this.Created.Equals(input.Created))
                ) && 
                (
                    this.Metadata == input.Metadata ||
                    (this.Metadata != null &&
                    this.Metadata.Equals(input.Metadata))
                ) && 
                (
                    this.Releaseid == input.Releaseid ||
                    (this.Releaseid != null &&
                    this.Releaseid.Equals(input.Releaseid))
                ) && 
                (
                    this.Releasenum == input.Releasenum ||
                    (this.Releasenum != null &&
                    this.Releasenum.Equals(input.Releasenum))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ContentHash != null)
                    hashCode = hashCode * 59 + this.ContentHash.GetHashCode();
                if (this.ContentSize != null)
                    hashCode = hashCode * 59 + this.ContentSize.GetHashCode();
                if (this.Created != null)
                    hashCode = hashCode * 59 + this.Created.GetHashCode();
                if (this.Metadata != null)
                    hashCode = hashCode * 59 + this.Metadata.GetHashCode();
                if (this.Releaseid != null)
                    hashCode = hashCode * 59 + this.Releaseid.GetHashCode();
                if (this.Releasenum != null)
                    hashCode = hashCode * 59 + this.Releasenum.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
